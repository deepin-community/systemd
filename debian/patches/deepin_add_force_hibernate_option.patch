Index: systemd/src/shared/sleep-config.c
===================================================================
--- systemd.orig/src/shared/sleep-config.c	2022-11-07 16:47:13.785824390 +0800
+++ systemd/src/shared/sleep-config.c	2022-11-07 16:48:50.393599613 +0800
@@ -35,6 +35,7 @@
 #include "string-util.h"
 #include "strv.h"
 #include "time-util.h"
+#include "proc-cmdline.h"
 
 int parse_sleep_config(SleepConfig **ret_sleep_config) {
         _cleanup_(free_sleep_configp) SleepConfig *sc = NULL;
@@ -632,6 +633,8 @@
                 const SleepConfig *sleep_config,
                 SleepOperation operation,
                 bool check_allowed) {
+        _cleanup_free_ char *cmdline_hibernate = NULL;
+        int r;
 
         assert(operation >= 0);
         assert(operation < _SLEEP_OPERATION_MAX);
@@ -651,6 +654,12 @@
         if (operation == SLEEP_SUSPEND)
                 return true;
 
+        if (operation == SLEEP_HIBERNATE) {
+                r = proc_cmdline_get_key("systemd.force-hibernate", 0, &cmdline_hibernate);
+                if ((true == r) && (NULL != cmdline_hibernate) && streq_ptr(cmdline_hibernate, "1"))
+                        return true;
+        }
+
         if (!enough_swap_for_hibernation())
                 return -ENOSPC;
 
Index: systemd/src/sleep/sleep.c
===================================================================
--- systemd.orig/src/sleep/sleep.c	2022-11-07 16:47:13.785824390 +0800
+++ systemd/src/sleep/sleep.c	2022-11-07 16:47:13.781824234 +0800
@@ -34,6 +34,8 @@
 #include "strv.h"
 #include "time-util.h"
 #include "util.h"
+#include "proc-cmdline.h"
+#include "alloc-util.h"
 
 static SleepOperation arg_operation = _SLEEP_OPERATION_INVALID;
 
@@ -187,8 +189,10 @@
 
         _cleanup_(hibernate_location_freep) HibernateLocation *hibernate_location = NULL;
         _cleanup_fclose_ FILE *f = NULL;
+        _cleanup_free_ char *cmdline_hibernate = NULL;
         char **modes, **states;
         int r;
+        int force_hibernate = 0;
 
         assert(sleep_config);
         assert(operation >= 0);
@@ -211,8 +215,12 @@
 
         setvbuf(f, NULL, _IONBF, 0);
 
+        r = proc_cmdline_get_key("systemd.force-hibernate", 0, &cmdline_hibernate);
+        if ((true == r) && (NULL != cmdline_hibernate) && streq_ptr(cmdline_hibernate, "1"))
+            force_hibernate = 1;
+
         /* Configure hibernation settings if we are supposed to hibernate */
-        if (!strv_isempty(modes)) {
+        if (!force_hibernate && !strv_isempty(modes)) {
                 r = find_hibernate_location(&hibernate_location);
                 if (r < 0)
                         return log_error_errno(r, "Failed to find location to hibernate to: %m");
