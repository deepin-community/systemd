diff --git a/src/basic/architecture.c b/src/basic/architecture.c
index 488367c..8f17178 100644
--- a/src/basic/architecture.c
+++ b/src/basic/architecture.c
@@ -49,6 +49,9 @@ Architecture uname_architecture(void) {
 #elif defined(__alpha__)
                 { "alpha" ,     ARCHITECTURE_ALPHA    },
 
+#elif defined(__sw_64__)
+                { "sw_64",      ARCHITECTURE_SUNWAY   },
+
 #elif defined(__arc__)
                 { "arc",        ARCHITECTURE_ARC      },
                 { "arceb",      ARCHITECTURE_ARC_BE   },
@@ -145,6 +148,7 @@ static const char *const architecture_table[_ARCHITECTURE_MAX] = {
         [ARCHITECTURE_ARM]         = "arm",
         [ARCHITECTURE_ARM_BE]      = "arm-be",
         [ARCHITECTURE_ALPHA]       = "alpha",
+        [ARCHITECTURE_SUNWAY]      = "sunway",
         [ARCHITECTURE_ARC]         = "arc",
         [ARCHITECTURE_ARC_BE]      = "arc-be",
         [ARCHITECTURE_CRIS]        = "cris",
diff --git a/src/basic/architecture.h b/src/basic/architecture.h
index 788f3ab..8226834 100644
--- a/src/basic/architecture.h
+++ b/src/basic/architecture.h
@@ -11,6 +11,7 @@
 
 typedef enum {
         ARCHITECTURE_ALPHA,
+        ARCHITECTURE_SUNWAY,
         ARCHITECTURE_ARC,
         ARCHITECTURE_ARC_BE,
         ARCHITECTURE_ARM,
@@ -142,6 +143,9 @@ Architecture uname_architecture(void);
 #elif defined(__alpha__)
 #  define native_architecture() ARCHITECTURE_ALPHA
 #  define LIB_ARCH_TUPLE "alpha-linux-gnu"
+#elif defined(__sw_64__)
+#  define native_architecture() ARCHITECTURE_SUNWAY
+#  define LIB_ARCH_TUPLE "sw_64-linux-gnu"
 #elif defined(__aarch64__)
 #  if __BYTE_ORDER == __BIG_ENDIAN
 #    define native_architecture() ARCHITECTURE_ARM64_BE
diff --git a/src/basic/missing_fcntl.h b/src/basic/missing_fcntl.h
index 24b2dc3..4a0141c 100644
--- a/src/basic/missing_fcntl.h
+++ b/src/basic/missing_fcntl.h
@@ -53,6 +53,8 @@
 #ifndef __O_TMPFILE
 #if defined(__alpha__)
 #define __O_TMPFILE     0100000000
+#elif defined(__sw_64__)
+#define __O_TMPFILE     0100100000
 #elif defined(__parisc__) || defined(__hppa__)
 #define __O_TMPFILE     0400000000
 #elif defined(__sparc__) || defined(__sparc64__)
diff --git a/src/basic/missing_syscall_def.h b/src/basic/missing_syscall_def.h
index f679422..e3fe03b 100644
--- a/src/basic/missing_syscall_def.h
+++ b/src/basic/missing_syscall_def.h
@@ -33,6 +33,7 @@
 #    endif
 #  elif defined(__s390__)
 #  elif defined(__sparc__)
+#  elif defined(__sw_64__)
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #    else
@@ -85,6 +86,8 @@
 #    define systemd_NR_bpf 351
 #  elif defined(__sparc__)
 #    define systemd_NR_bpf 349
+#  elif defined(__sw_64__)
+#    define systemd_NR_bpf 170
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_bpf (321 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -153,6 +156,8 @@ assert_cc(__NR_bpf == systemd_NR_bpf);
 #    define systemd_NR_close_range 436
 #  elif defined(__sparc__)
 #    define systemd_NR_close_range 436
+#  elif defined(__sw_64__)
+#    define systemd_NR_close_range 283
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_close_range (436 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -221,6 +226,8 @@ assert_cc(__NR_close_range == systemd_NR_close_range);
 #    define systemd_NR_copy_file_range 375
 #  elif defined(__sparc__)
 #    define systemd_NR_copy_file_range 357
+#  elif defined(__sw_64__)
+#    define systemd_NR_copy_file_range 515
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_copy_file_range (326 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -357,6 +364,8 @@ assert_cc(__NR_fchmodat2 == systemd_NR_fchmodat2);
 #    define systemd_NR_getrandom 349
 #  elif defined(__sparc__)
 #    define systemd_NR_getrandom 347
+#  elif defined(__sw_64__)
+#    define systemd_NR_getrandom 511
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_getrandom (318 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -425,6 +434,8 @@ assert_cc(__NR_getrandom == systemd_NR_getrandom);
 #    define systemd_NR_memfd_create 350
 #  elif defined(__sparc__)
 #    define systemd_NR_memfd_create 348
+#  elif defined(__sw_64__)
+#    define systemd_NR_memfd_create 512
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_memfd_create (319 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -493,6 +504,8 @@ assert_cc(__NR_memfd_create == systemd_NR_memfd_create);
 #    define systemd_NR_mount_setattr 442
 #  elif defined(__sparc__)
 #    define systemd_NR_mount_setattr 442
+#  elif defined(__sw_64__)
+#    define systemd_NR_mount_setattr 181
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_mount_setattr (442 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -561,6 +574,8 @@ assert_cc(__NR_mount_setattr == systemd_NR_mount_setattr);
 #    define systemd_NR_move_mount 429
 #  elif defined(__sparc__)
 #    define systemd_NR_move_mount 429
+#  elif defined(__sw_64__)
+#    define systemd_NR_move_mount 276
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_move_mount (429 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -629,6 +644,8 @@ assert_cc(__NR_move_mount == systemd_NR_move_mount);
 #    define systemd_NR_name_to_handle_at 335
 #  elif defined(__sparc__)
 #    define systemd_NR_name_to_handle_at 332
+#  elif defined(__sw_64__)
+#    define systemd_NR_name_to_handle_at 497
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_name_to_handle_at (303 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -697,6 +714,8 @@ assert_cc(__NR_name_to_handle_at == systemd_NR_name_to_handle_at);
 #    define systemd_NR_open_tree 428
 #  elif defined(__sparc__)
 #    define systemd_NR_open_tree 428
+#  elif defined(__sw_64__)
+#    define systemd_NR_open_tree 275
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_open_tree (428 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -833,6 +852,8 @@ assert_cc(__NR_openat2 == systemd_NR_openat2);
 #    define systemd_NR_pidfd_open 434
 #  elif defined(__sparc__)
 #    define systemd_NR_pidfd_open 434
+#  elif defined(__sw_64__)
+#    define systemd_NR_pidfd_open 281
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_pidfd_open (434 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -901,6 +922,8 @@ assert_cc(__NR_pidfd_open == systemd_NR_pidfd_open);
 #    define systemd_NR_pidfd_send_signal 424
 #  elif defined(__sparc__)
 #    define systemd_NR_pidfd_send_signal 424
+#  elif defined(__sw_64__)
+#    define systemd_NR_pidfd_send_signal 271
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_pidfd_send_signal (424 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -969,6 +992,8 @@ assert_cc(__NR_pidfd_send_signal == systemd_NR_pidfd_send_signal);
 #    define systemd_NR_pkey_mprotect 384
 #  elif defined(__sparc__)
 #    define systemd_NR_pkey_mprotect 362
+#  elif defined(__sw_64__)
+#    define systemd_NR_pkey_mprotect 288
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_pkey_mprotect (329 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -1037,6 +1062,8 @@ assert_cc(__NR_pkey_mprotect == systemd_NR_pkey_mprotect);
 #    define systemd_NR_renameat2 347
 #  elif defined(__sparc__)
 #    define systemd_NR_renameat2 345
+#  elif defined(__sw_64__)
+#    define systemd_NR_renameat2 510
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_renameat2 (316 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -1105,6 +1132,8 @@ assert_cc(__NR_renameat2 == systemd_NR_renameat2);
 #    define systemd_NR_setns 339
 #  elif defined(__sparc__)
 #    define systemd_NR_setns 337
+#  elif defined(__sw_64__)
+#    define systemd_NR_setns 501
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_setns (308 | /* __X32_SYSCALL_BIT */ 0x40000000)
@@ -1173,6 +1202,8 @@ assert_cc(__NR_setns == systemd_NR_setns);
 #    define systemd_NR_statx 379
 #  elif defined(__sparc__)
 #    define systemd_NR_statx 360
+#  elif defined(__sw_64__)
+#    define systemd_NR_statx 518
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_statx (332 | /* __X32_SYSCALL_BIT */ 0x40000000)
diff --git a/src/basic/missing_syscalls.py b/src/basic/missing_syscalls.py
index 3749e89..0eb77e5 100644
--- a/src/basic/missing_syscalls.py
+++ b/src/basic/missing_syscalls.py
@@ -90,6 +90,8 @@ DEF_TEMPLATE_B = '''\
 #    define systemd_NR_{syscall} {nr_s390}
 #  elif defined(__sparc__)
 #    define systemd_NR_{syscall} {nr_sparc}
+#  elif defined(__sw_64__)
+#    define systemd_NR_{syscall} {nr_sw_64}
 #  elif defined(__x86_64__)
 #    if defined(__ILP32__)
 #      define systemd_NR_{syscall} ({nr_x86_64} | /* __X32_SYSCALL_BIT */ 0x40000000)
diff --git a/src/basic/syscalls-sw_64.txt b/src/basic/syscalls-sw_64.txt
new file mode 100644
index 0000000..cd7eb50
--- /dev/null
+++ b/src/basic/syscalls-sw_64.txt
@@ -0,0 +1,387 @@
+accept 99
+accept4 502
+access 33
+acct 51
+add_key 439
+adjtimex 366
+afs_syscall 338
+bdflush 300
+bind 104
+bpf 170
+brk 17
+capget 368
+capset 369
+chdir 12
+chmod 15
+chown 16
+chroot 61
+clock_adjtime 499
+clock_getres 421
+clock_gettime 420
+clock_nanosleep 422
+clock_settime 419
+clone 312
+clone3 282
+close 6
+close_range 283
+connect 98
+copy_file_range 515
+create_module 306
+delete_module 308
+dipc 373
+dup 41
+dup2 90
+dup3 487
+epoll_create 407
+epoll_create1 486
+epoll_ctl 408
+epoll_pwait 474
+epoll_wait 409
+eventfd 478
+eventfd2 485
+execve 59
+execveat 513
+exit 1
+exit_group 405
+faccessat 462
+faccessat2 286
+fadvise64 413
+fallocate 480
+fanotify_init 494
+fanotify_mark 495
+fchdir 13
+fchmod 124
+fchmodat 461
+fchown 123
+fchownat 453
+fcntl 92
+fdatasync 447
+fgetxattr 387
+finit_module 507
+flistxattr 390
+flock 131
+fork 2
+fremovexattr 393
+fsconfig 278
+fsetxattr 384
+fsmount 279
+fsopen 277
+fspick 280
+fstat 91
+fstat64 427
+fstatat64 455
+fstatfs 329
+fstatfs64 230
+fsync 95
+ftruncate 130
+futex 394
+futimesat 454
+get_kernel_syms 309
+get_mempolicy 430
+get_robust_list 467
+getcpu 473
+getcwd 367
+getdents 305
+getdents64 377
+getdtablesize 89
+getegid 179
+geteuid 177
+getgid 178
+getgroups 79
+gethostname 87
+getitimer 361
+getpagesize 64
+getpeername 141
+getpgid 233
+getpgrp 63
+getpid 174
+getppid 175
+getpriority 100
+getrandom 511
+getresgid 372
+getresuid 344
+getrlimit 144
+getrusage 364
+getsid 234
+getsockname 150
+getsockopt 118
+gettid 378
+gettimeofday 359
+getuid 176
+getxattr 385
+getxgid 47
+getxpid 20
+getxuid 24
+init_module 307
+inotify_add_watch 445
+inotify_init 444
+inotify_init1 489
+inotify_rm_watch 446
+io_cancel 402
+io_destroy 399
+io_getevents 400
+io_pgetevents 403
+io_setup 398
+io_submit 401
+io_uring_enter 273
+io_uring_register 274
+io_uring_setup 272
+ioctl 54
+ioprio_get 443
+ioprio_set 442
+kcmp 506
+kexec_load 448
+keyctl 441
+kill 37
+lchown 208
+lgetxattr 386
+link 9
+linkat 458
+listen 106
+listxattr 388
+llistxattr 389
+lookup_dcookie 406
+lremovexattr 392
+lseek 19
+lsetxattr 383
+lstat 68
+lstat64 426
+madvise 75
+mbind 429
+membarrier 172
+memfd_create 512
+migrate_pages 449
+mincore 375
+mkdir 136
+mkdirat 451
+mknod 14
+mknodat 452
+mlock 314
+mlock2 173
+mlockall 316
+mmap 71
+mount 302
+move_mount 276
+move_pages 472
+mprotect 74
+mq_getsetattr 437
+mq_notify 436
+mq_open 432
+mq_timedreceive 435
+mq_timedsend 434
+mq_unlink 433
+mremap 341
+msgctl 200
+msgget 201
+msgrcv 202
+msgsnd 203
+msync 217
+munlock 315
+munlockall 317
+munmap 73
+name_to_handle_at 497
+nanosleep 340
+nfsservctl 342
+old_adjtimex 303
+oldumount 321
+open 45
+open_by_handle_at 498
+open_tree 275
+openat 450
+openat2 284
+osf_fstat 226
+osf_fstatfs 161
+osf_fstatfs64 228
+osf_getdirentries 159
+osf_getdomainname 165
+osf_getitimer 86
+osf_getrusage 117
+osf_getsysinfo 256
+osf_gettimeofday 116
+osf_lstat 225
+osf_mount 21
+osf_proplist_syscall 244
+osf_select 93
+osf_set_program_attributes 43
+osf_setitimer 83
+osf_setsysinfo 257
+osf_settimeofday 122
+osf_sigprocmask 48
+osf_sigstack 112
+osf_stat 224
+osf_statfs 160
+osf_statfs64 227
+osf_swapon 199
+osf_sysinfo 241
+osf_usleep_thread 251
+osf_utimes 138
+osf_utsname 207
+osf_wait4 7
+pciconfig_iobase 376
+pciconfig_read 345
+pciconfig_write 346
+perf_event_open 493
+personality 324
+pidfd_getfd 285
+pidfd_open 281
+pidfd_send_signal 271
+pipe 42
+pipe2 488
+pivot_root 374
+poll 94
+ppoll 464
+prctl 348
+pread64 349
+preadv 490
+preadv2 516
+prlimit64 496
+process_madvise 287
+process_vm_readv 504
+process_vm_writev 505
+pselect6 463
+ptrace 26
+pwrite64 350
+pwritev 491
+pwritev2 517
+query_module 347
+quotactl 148
+read 3
+readahead 379
+readlink 58
+readlinkat 460
+readv 120
+reboot 311
+recv 102
+recvfrom 125
+recvmmsg 479
+recvmsg 113
+remap_file_pages 410
+removexattr 391
+rename 128
+renameat 457
+renameat2 510
+request_key 440
+restart_syscall 412
+rmdir 137
+rseq 404
+rt_sigaction 352
+rt_sigpending 354
+rt_sigprocmask 353
+rt_sigqueueinfo 356
+rt_sigreturn 351
+rt_sigsuspend 357
+rt_sigtimedwait 355
+rt_tgsigqueueinfo 492
+sched_get_priority_max 335
+sched_get_priority_min 336
+sched_getaffinity 396
+sched_getattr 509
+sched_getparam 331
+sched_getscheduler 333
+sched_rr_get_interval 337
+sched_setaffinity 395
+sched_setattr 508
+sched_setparam 330
+sched_setscheduler 332
+sched_yield 334
+seccomp 514
+select 358
+semctl 204
+semget 205
+semop 206
+semtimedop 423
+send 101
+sendfile 370
+sendmmsg 503
+sendmsg 114
+sendto 133
+set_mempolicy 431
+set_robust_list 466
+set_tid_address 411
+setdomainname 166
+setfsgid 326
+setfsuid 325
+setgid 132
+setgroups 80
+sethae 301
+sethostname 88
+setitimer 362
+setns 501
+setpgid 39
+setpgrp 82
+setpriority 96
+setregid 127
+setresgid 371
+setresuid 343
+setreuid 126
+setrlimit 145
+setsid 147
+setsockopt 105
+settimeofday 360
+setuid 23
+setxattr 382
+shmat 209
+shmctl 210
+shmdt 211
+shmget 212
+shutdown 134
+sigaction 156
+sigaltstack 235
+signalfd 476
+signalfd4 484
+sigpending 52
+sigreturn 103
+sigsuspend 111
+socket 97
+socketcall 119
+socketpair 135
+splice 468
+stat 67
+stat64 425
+statfs 328
+statfs64 229
+statx 518
+swapoff 304
+swapon 322
+symlink 57
+symlinkat 459
+sync 36
+sync_file_range 469
+syncfs 500
+sysfs 254
+sysinfo 318
+syslog 310
+tee 470
+tgkill 424
+timer_create 414
+timer_delete 418
+timer_getoverrun 417
+timer_gettime 416
+timer_settime 415
+timerfd 477
+timerfd_create 481
+timerfd_gettime 483
+timerfd_settime 482
+times 323
+tkill 381
+truncate 129
+tuxcall 397
+umask 60
+umount2 22
+uname 339
+unlink 10
+unlinkat 456
+unshare 465
+uselib 313
+userfaultfd 171
+ustat 327
+utimensat 475
+utimes 363
+vfork 66
+vhangup 76
+vmsplice 471
+vserver 428
+wait4 365
+waitid 438
+write 4
+writev 121
